{"version":3,"file":"static/js/1320.b97f03ac.chunk.js","mappings":"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","sources":["../node_modules/lodash/setWith.js","../node_modules/lodash/_baseSet.js","../node_modules/lodash/clone.js","../node_modules/uniforms/esm/changedKeys.js","../node_modules/uniforms/esm/randomIds.js","../node_modules/uniforms/esm/BaseForm.js","../node_modules/uniforms/esm/QuickForm.js","../node_modules/uniforms/esm/ValidatedForm.js","../node_modules/uniforms/esm/AutoForm.js","../node_modules/uniforms/esm/ValidatedQuickForm.js","../../../../src/ui/AutoformControls/AutoFieldContext.tsx","../../../../src/ui/AutoformControls/AutoForm.tsx"],"sourcesContent":["var baseSet = require('./_baseSet');\n\n/**\n * This method is like `_.set` except that it accepts `customizer` which is\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n * path creation is handled by the method instead. The `customizer` is invoked\n * with three arguments: (nsValue, key, nsObject).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {};\n *\n * _.setWith(object, '[0][1]', 'a', Object);\n * // => { '0': { '1': 'a' } }\n */\nfunction setWith(object, path, value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return object == null ? object : baseSet(object, path, value, customizer);\n}\n\nmodule.exports = setWith;\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n","import isEqual from 'lodash/isEqual';\nimport { joinName } from './joinName';\nfunction isObject(value) {\n    return !!value && value === Object(value) && !(value instanceof Date);\n}\n// eslint-disable-next-line complexity\nexport function changedKeys(root, valueA, valueB) {\n    if (!isObject(valueA) || (valueB && typeof valueA !== typeof valueB)) {\n        return isEqual(valueA, valueB) ? [] : [root];\n    }\n    const changed = [root];\n    if (isObject(valueB)) {\n        for (const key in valueA) {\n            if (!(key in valueB) || !isEqual(valueA[key], valueB[key])) {\n                changed.push(joinName(root, key));\n            }\n        }\n        for (const key in valueB) {\n            if (!(key in valueA)) {\n                changed.push(joinName(root, key));\n            }\n        }\n        if (changed.length === 1) {\n            changed.pop();\n        }\n    }\n    else {\n        // eslint-disable-next-line guard-for-in\n        for (const key in valueA) {\n            changed.push(joinName(root, key));\n        }\n    }\n    return changed;\n}\n","// Workaround for SSR\n// https://github.com/vazco/uniforms/issues/40\n// https://github.com/facebook/react/issues/4000\nfunction randomIdsGenerator(prefix) {\n    let counter = 0;\n    return () => `${prefix}-${('000' + (counter++).toString(36)).slice(-4)}`;\n}\nconst randomIdPrefix = randomIdsGenerator('uniforms');\nexport function randomIds(prefix = randomIdPrefix()) {\n    return randomIdsGenerator(prefix);\n}\n","import clone from 'lodash/clone';\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport React, { Component } from 'react';\nimport { changedKeys } from './changedKeys';\nimport { context } from './context';\nimport { randomIds } from './randomIds';\nexport class BaseForm extends Component {\n    constructor(props) {\n        super(props);\n        // @ts-expect-error: State may be bigger, but it'll be covered by the subclasses.\n        this.state = {\n            changed: false,\n            changedMap: Object.create(null),\n            resetCount: 0,\n            submitted: false,\n            submitting: false,\n        };\n        this.mounted = false;\n        this.randomId = randomIds(this.props.id);\n        this.onReset = this.reset = this.onReset.bind(this);\n        this.onChange = this.change = this.onChange.bind(this);\n        this.onSubmit = this.submit = this.onSubmit.bind(this);\n        // TODO: It shouldn't be here\n        const getModel = this.getModel.bind(this);\n        this.getModel = (mode, model = getModel(mode)) => mode !== undefined && this.props.modelTransform\n            ? this.props.modelTransform(mode, model)\n            : model;\n    }\n    componentDidMount() {\n        this.mounted = true;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    componentDidUpdate(prevProps, prevState, snapshot) { }\n    componentWillUnmount() {\n        this.mounted = false;\n        if (this.delayId) {\n            clearTimeout(this.delayId);\n        }\n        // There are at least 4 places where we'd need to check, whether or not we\n        // actually perform `setState` after the component gets unmounted. Instead,\n        // we override it to hide the React warning. Also because React no longer\n        // will raise it in the newer versions.\n        // https://github.com/facebook/react/pull/22114\n        // https://github.com/vazco/uniforms/issues/1152\n        this.setState = () => { };\n    }\n    getContext() {\n        return {\n            changed: this.state.changed,\n            changedMap: this.state.changedMap,\n            error: this.getContextError(),\n            formRef: this,\n            model: this.getContextModel(),\n            name: this.getContextName(),\n            onChange: this.getContextOnChange(),\n            onSubmit: this.getContextOnSubmit(),\n            randomId: this.randomId,\n            schema: this.getContextSchema(),\n            state: this.getContextState(),\n            submitted: this.state.submitted,\n            submitting: this.state.submitting,\n            validating: false,\n        };\n    }\n    getContextName() {\n        return [];\n    }\n    getContextError() {\n        return this.props.error;\n    }\n    getContextModel() {\n        return this.getModel('form');\n    }\n    getContextState() {\n        return {\n            disabled: !!this.props.disabled,\n            label: !!this.props.label,\n            placeholder: !!this.props.placeholder,\n            readOnly: !!this.props.readOnly,\n            showInlineError: !!this.props.showInlineError,\n        };\n    }\n    getContextSchema() {\n        return this.props.schema;\n    }\n    getContextOnChange() {\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return this.onChange;\n    }\n    getContextOnSubmit() {\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return this.onSubmit;\n    }\n    getModel(mode, model = this.props.model) {\n        return model;\n    }\n    getNativeFormProps() {\n        const props = omit(this.props, [\n            'autosave',\n            'autosaveDelay',\n            'disabled',\n            'error',\n            'label',\n            'model',\n            'modelTransform',\n            'onChange',\n            'onSubmit',\n            'placeholder',\n            'readOnly',\n            'schema',\n            'showInlineError',\n        ]);\n        return Object.assign(Object.assign({}, props), { \n            // It's bound in constructor.\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            onSubmit: this.onSubmit, key: `reset-${this.state.resetCount}` });\n    }\n    onChange(key, value) {\n        // Do not set `changed` before componentDidMount\n        if (this.mounted) {\n            const keys = changedKeys(key, value, get(this.getModel(), key));\n            if (keys.length !== 0) {\n                this.setState(state => \n                // If all are already marked, we can skip the update completely.\n                state.changed && keys.every(key => !!get(state.changedMap, key))\n                    ? null\n                    : {\n                        changed: true,\n                        changedMap: keys.reduce((changedMap, key) => setWith(changedMap, key, {}, clone), clone(state.changedMap)),\n                    });\n            }\n        }\n        if (this.props.onChange) {\n            this.props.onChange(key, value);\n        }\n        // Do not call `onSubmit` before componentDidMount\n        if (this.mounted && this.props.autosave) {\n            if (this.delayId) {\n                this.delayId = clearTimeout(this.delayId);\n            }\n            // Delay autosave by `autosaveDelay` milliseconds...\n            this.delayId = setTimeout(() => {\n                // ...and wait for all scheduled `setState`s to commit. This is required\n                // for AutoForm to validate correct model, waiting in `onChange`.\n                this.setState(() => null, () => {\n                    this.onSubmit();\n                });\n            }, this.props.autosaveDelay);\n        }\n    }\n    __reset(state) {\n        return {\n            changed: false,\n            changedMap: Object.create(null),\n            resetCount: state.resetCount + 1,\n            submitted: false,\n            submitting: false,\n        };\n    }\n    onReset() {\n        // @ts-expect-error\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.setState(this.__reset);\n    }\n    onSubmit(event) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.setState(state => (state.submitted ? null : { submitted: true }));\n        const result = this.props.onSubmit(this.getModel('submit'));\n        if (!(result instanceof Promise)) {\n            return Promise.resolve();\n        }\n        this.setState({ submitting: true });\n        return result.finally(() => {\n            this.setState({ submitting: false });\n        });\n    }\n    render() {\n        return (React.createElement(context.Provider, { value: this.getContext() },\n            React.createElement(\"form\", Object.assign({}, this.getNativeFormProps()))));\n    }\n}\nBaseForm.displayName = 'Form';\nBaseForm.defaultProps = {\n    autosave: false,\n    autosaveDelay: 0,\n    error: null,\n    label: true,\n    model: Object.create(null),\n    noValidate: true,\n    onSubmit() { },\n};\n","import { __rest } from \"tslib\";\nimport React from 'react';\nimport { BaseForm } from './BaseForm';\nexport function Quick(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class QuickForm extends Base {\n        getNativeFormProps() {\n            const _props = super.getNativeFormProps();\n            const { autoField: AutoField = this.getAutoField(), errorsField: ErrorsField = this.getErrorsField(), submitField: SubmitField = this.getSubmitField() } = _props, props = __rest(_props, [\"autoField\", \"errorsField\", \"submitField\"]);\n            if (!props.children) {\n                props.children = this.getContextSchema()\n                    .getSubfields()\n                    .map(key => React.createElement(AutoField, { key: key, name: key }))\n                    .concat([\n                    React.createElement(ErrorsField, { key: \"$ErrorsField\" }),\n                    React.createElement(SubmitField, { key: \"$SubmitField\" }),\n                ]);\n            }\n            return props;\n        }\n        getAutoField() {\n            return () => null;\n        }\n        getErrorsField() {\n            return () => null;\n        }\n        getSubmitField() {\n            return () => null;\n        }\n    }\n    QuickForm.Quick = Quick;\n    QuickForm.displayName = `Quick${Base.displayName}`;\n    return QuickForm;\n}\nexport const QuickForm = Quick(BaseForm);\n","import clone from 'lodash/clone';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport noop from 'lodash/noop';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport { BaseForm } from './BaseForm';\nexport function Validated(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class ValidatedForm extends Base {\n        constructor(props) {\n            super(props);\n            this.state = Object.assign(Object.assign({}, this.state), { error: null, validate: false, validating: false, validator: this.getContextSchema().getValidator(props.validator) });\n            this.onValidate = this.validate = this.onValidate.bind(this);\n            this.onValidateModel = this.validateModel =\n                this.onValidateModel.bind(this);\n        }\n        getContextError() {\n            var _a;\n            return (_a = super.getContextError()) !== null && _a !== void 0 ? _a : this.state.error;\n        }\n        getContext() {\n            return Object.assign(Object.assign({}, super.getContext()), { validating: this.state.validating });\n        }\n        getNativeFormProps() {\n            const props = super.getNativeFormProps();\n            return omit(props, [\n                'onValidate',\n                'validate',\n                'validator',\n            ]);\n        }\n        componentDidUpdate(prevProps, prevState, snapshot) {\n            super.componentDidUpdate(prevProps, prevState, snapshot);\n            const { model, schema, validate, validator } = this.props;\n            if (schema !== prevProps.schema || validator !== prevProps.validator) {\n                this.setState({ validator: schema.getValidator(validator) }, () => {\n                    if (shouldRevalidate(validate, this.state.validate)) {\n                        this.onValidate();\n                    }\n                });\n            }\n            else if (!isEqual(model, prevProps.model) &&\n                shouldRevalidate(validate, this.state.validate)) {\n                this.onValidateModel(model);\n            }\n        }\n        onChange(key, value) {\n            if (shouldRevalidate(this.props.validate, this.state.validate)) {\n                this.onValidate(key, value);\n            }\n            super.onChange(key, value);\n        }\n        __reset(state) {\n            return Object.assign(Object.assign({}, super.__reset(state)), { error: null, validate: false, validating: false });\n        }\n        onSubmit(event) {\n            if (event) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            this.setState({ submitted: true, validate: true });\n            const result = this.onValidate().then(error => {\n                if (error !== null) {\n                    return Promise.reject(error);\n                }\n                // Validation failed (i.e. returned an error), so no error is present\n                // both in the props nor the state.\n                return super.onSubmit().catch(error => {\n                    this.setState({ error });\n                    throw error;\n                });\n            });\n            result.catch(noop);\n            return result;\n        }\n        onValidate(key, value) {\n            let model = this.getContextModel();\n            if (model && key) {\n                model = setWith(clone(model), key, cloneDeep(value), clone);\n            }\n            return this.onValidateModel(model);\n        }\n        onValidateModel(originalModel) {\n            const model = this.getModel('validate', originalModel);\n            // Using `then` allows using the same code for both synchronous and\n            // asynchronous cases. We could use `await` here, but it would make all\n            // calls asynchronous, unnecessary delaying synchronous validation.\n            const then = makeThen(() => {\n                this.setState({ validating: true });\n            });\n            return then(this.state.validator(model), (error = null) => then(this.props.onValidate(model, error), (error = null) => {\n                var _a;\n                // Do not copy the error from props to the state.\n                error = this.props.error === error ? null : error;\n                // If the whole operation was synchronous and resulted in the same\n                // error, we can skip the re-render.\n                this.setState(state => state.error === error && !state.validating\n                    ? null\n                    : { error, validating: false });\n                // A predefined error takes precedence over the validation one.\n                return Promise.resolve((_a = this.props.error) !== null && _a !== void 0 ? _a : error);\n            }));\n        }\n    }\n    ValidatedForm.Validated = Validated;\n    ValidatedForm.displayName = `Validated${Base.displayName}`;\n    ValidatedForm.defaultProps = Object.assign(Object.assign({}, Base.defaultProps), { onValidate(model, error) {\n            return error;\n        }, validate: 'onChangeAfterSubmit' });\n    return ValidatedForm;\n}\nfunction makeThen(callIfAsync) {\n    function then(value, fn) {\n        if (value instanceof Promise) {\n            callIfAsync();\n            return value.then(fn);\n        }\n        return fn(value);\n    }\n    return then;\n}\nfunction shouldRevalidate(inProps, inState) {\n    return (inProps === 'onChange' || (inProps === 'onChangeAfterSubmit' && inState));\n}\nexport const ValidatedForm = Validated(BaseForm);\n","import clone from 'lodash/clone';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport { ValidatedQuickForm, } from './ValidatedQuickForm';\nexport function Auto(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class AutoForm extends Base {\n        constructor(props) {\n            super(props);\n            this.state = Object.assign(Object.assign({}, this.state), { model: props.model });\n        }\n        componentDidUpdate(prevProps, prevState, snapshot) {\n            const { model } = this.props;\n            if (!isEqual(model, prevProps.model)) {\n                this.setState({ model });\n            }\n            super.componentDidUpdate(prevProps, prevState, snapshot);\n        }\n        getNativeFormProps() {\n            const props = super.getNativeFormProps();\n            return omit(props, ['onChangeModel']);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        getModel(mode) {\n            return this.state.model;\n        }\n        onChange(key, value) {\n            super.onChange(key, value);\n            this.setState(state => ({ model: setWith(clone(state.model), key, value, clone) }), () => {\n                if (this.props.onChangeModel) {\n                    this.props.onChangeModel(this.state.model);\n                }\n            });\n        }\n        __reset(state) {\n            return Object.assign(Object.assign({}, super.__reset(state)), { model: this.props.model });\n        }\n    }\n    AutoForm.Auto = Auto;\n    AutoForm.displayName = `Auto${Base.displayName}`;\n    return AutoForm;\n}\nexport const AutoForm = Auto(ValidatedQuickForm);\n","import { BaseForm } from './BaseForm';\nimport { Quick } from './QuickForm';\nimport { Validated, } from './ValidatedForm';\nexport const ValidatedQuickForm = Validated(Quick(BaseForm));\n"],"names":["baseSet","require","module","exports","object","path","value","customizer","undefined","assignValue","castPath","isIndex","isObject","toKey","index","length","lastIndex","nested","key","newValue","objValue","baseClone","Object","Date","randomIdsGenerator","prefix","counter","concat","toString","slice","randomIdPrefix","BaseForm","Component","constructor","props","_this","super","this","state","changed","changedMap","create","resetCount","submitted","submitting","mounted","randomId","arguments","randomIds","id","onReset","reset","bind","onChange","change","onSubmit","submit","getModel","mode","model","modelTransform","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","componentWillUnmount","delayId","clearTimeout","setState","getContext","error","getContextError","formRef","getContextModel","name","getContextName","getContextOnChange","getContextOnSubmit","schema","getContextSchema","getContextState","validating","disabled","label","placeholder","readOnly","showInlineError","getNativeFormProps","omit","assign","keys","root","valueA","valueB","isEqual","push","joinName","pop","changedKeys","get","every","reduce","setWith","clone","autosave","setTimeout","autosaveDelay","__reset","event","preventDefault","stopPropagation","result","Promise","finally","resolve","render","React","context","Provider","displayName","defaultProps","noValidate","Quick","Base","QuickForm","_props","autoField","AutoField","getAutoField","errorsField","ErrorsField","getErrorsField","submitField","SubmitField","getSubmitField","__rest","children","getSubfields","map","Validated","ValidatedForm","validate","validator","getValidator","onValidate","onValidateModel","validateModel","_a","shouldRevalidate","then","reject","catch","noop","cloneDeep","originalModel","callIfAsync","fn","makeThen","inProps","inState","AutoForm","Auto","onChangeModel","componentDetectorContext","uniforms","_b","showIf","call","_customComponent","defaultComponentDetector","forwardRef","ref","AutofieldContextProvider","__assign"],"sourceRoot":""}